NOM: Marc Lladó Maldonado                    Exercicis SQL - IT Academy 

1.1.3 Consultas sobre una tabla
1. SELECT nombre FROM producto;
2. SELECT nombre, precio FROM producto;
3. SELECT * FROM producto;
4. SELECT nombre, precio, TRUNCATE(precio*1.12 , 2) FROM producto;
5. SELECT nombre AS "nombre de producto", precio AS euros, TRUNCATE(precio*1.12 , 2) AS dólares FROM producto;
6. SELECT UPPER(nombre), precio FROM producto;
7. SELECT LOWER(nombre), precio FROM producto;
8. SELECT nombre, UPPER(SUBSTRING(nombre, 1, 2)) FROM fabricante;
9. SELECT nombre, ROUND(precio) FROM producto;
10. SELECT nombre, TRUNCATE(precio,0) FROM producto; 
11. SELECT codigo_fabricante from producto;
12. SELECT DISTINCT(codigo_fabricante) from producto;
13. SELECT nombre FROM fabricante ORDER BY nombre ASC;
14. SELECT nombre FROM fabricante ORDER BY nombre DESC;
15. SELECT nombre FROM producto ORDER BY nombre ASC, precio DESC;
16. SELECT * FROM fabricante LIMIT 5;
17. SELECT * FROM fabricante LIMIT 2 OFFSET 3;
18. SELECT nombre, precio FROM producto ORDER BY precio ASC LIMIT 1;
19. SELECT nombre, precio FROM producto ORDER BY precio DESC LIMIT 1;
20. SELECT nombre FROM producto WHERE codigo_fabricante = 2;
21. SELECT nombre FROM producto WHERE precio <=120;
22. SELECT nombre FROM producto WHERE precio >=400;
23. SELECT nombre FROM producto WHERE precio < 400;
24. SELECT * FROM producto WHERE precio>=80 AND precio<=300;
25. SELECT * FROM producto WHERE precio BETWEEN 80 AND 300;
26. SELECT * FROM producto WHERE precio>200 AND codigo_fabricante = 6;
27. SELECT * FROM producto WHERE codigo_fabricante=1 OR codigo_fabricante=3 OR codigo_fabricante=5;
28. SELECT * FROM producto WHERE codigo_fabricante IN(1,3,5);
29. SELECT nombre, precio*100 AS céntimos FROM producto;
30. SELECT nombre FROM fabricante WHERE nombre LIKE 's%';
31. SELECT nombre FROM fabricante WHERE nombre LIKE '%e';
32. SELECT nombre FROM fabricante WHERE nombre LIKE '%w%';
33. SELECT nombre FROM fabricante WHERE CHAR_LENGTH(nombre)=4;
34. SELECT nombre FROM producto WHERE nombre LIKE '%Portátil%';
35. SELECT nombre FROM producto WHERE nombre LIKE '%Monitor%' AND precio<215;
36. SELECT nombre, precio FROM producto WHERE precio>=180 ORDER BY precio DESC, nombre ASC;

1.1.4 Consultas multitabla (Composición interna)
1. SELECT producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo;
2. SELECT producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo ORDER BY fabricante.nombre ASC;
3. SELECT producto.codigo, producto.nombre, codigo_fabricante, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo;
4. SELECT producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo ORDER BY precio ASC  LIMIT 1;
5. SELECT producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo ORDER BY precio DESC  LIMIT 1;
6. SELECT producto.codigo, producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Lenovo";
7. SELECT producto.codigo, producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Crucial" AND precio>200;
8. SELECT producto.codigo, producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus" OR  fabricante.nombre LIKE "Hewlett%" OR fabricante.nombre = "Seagate";
9. SELECT producto.codigo, producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre IN ("Asus", "Hewlett-Packard", "Seagate");
10. SELECT producto.nombre, precio FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre LIKE '%e';
11. SELECT producto.nombre, precio FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre LIKE '%w%';
12. SELECT producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE precio>=180 ORDER BY precio DESC, producto.nombre ASC;
13. SELECT DISTINCT fabricante.codigo, fabricante.nombre FROM fabricante INNER JOIN producto ON codigo_fabricante = fabricante.codigo;

1.1.5 Consultas multitabla (Composición externa)
1. SELECT fabricante.nombre, producto.nombre FROM fabricante LEFT JOIN producto ON  codigo_fabricante = fabricante.codigo;
2. SELECT fabricante.nombre FROM fabricante LEFT JOIN producto ON fabricante.codigo = codigo_fabricante WHERE producto.nombre IS NULL;
3. Sí,  podria darse el caso si la base de datos no estuviera actualitzada. 
	Es decir, si insertamos un nuevo producto con un nuevo código de fabricante (por ejemplo Apple), y el fabricante no lo habíamos insertado en la tabla ‘fabricante’ tendremos un producto que no estarà relacionado con un fabricante.  
	Por otra parte la definición más óptima para la pregunta es no, aunque si podemos tener fabricantes sin estar relacionados con productos. Porque todos los productos tienen fabricante però no todos los fabricantes tienen productos.

1.1.6 Resumen
1. SELECT count(*) FROM producto;
2. SELECT count(*) FROM fabricante;
3. SELECT  count(DISTINCT codigo_fabricante) FROM producto;
4. SELECT avg(precio) FROM producto;
5. SELECT min(precio) FROM producto;
6. SELECT max(precio) FROM producto;
7. SELECT nombre, precio FROM producto ORDER BY precio ASC LIMIT 1;
8. SELECT nombre, precio FROM producto ORDER BY precio DESC LIMIT 1;
9. SELECT sum(precio) FROM producto;
10. SELECT count(*) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus";
11. SELECT avg(precio) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus";
12. SELECT min(precio) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus";
13. SELECT max(precio) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus";
14. SELECT sum(precio) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus";
15. SELECT max(precio), min(precio), avg(precio), count(*) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Crucial";
16. SELECT DISTINCT fabricante.nombre, count(producto.nombre) FROM fabricante LEFT JOIN producto ON fabricante.codigo = codigo_fabricante GROUP BY fabricante.nombre ORDER BY count(producto.nombre) DESC;
17. SELECT fabricante.nombre, max(precio), min(precio), avg(precio) FROM fabricante LEFT JOIN producto ON fabricante.codigo = codigo_fabricante GROUP BY fabricante.nombre;
18. SELECT codigo_fabricante, max(precio), min(precio), avg(precio), count(*) FROM producto  GROUP BY codigo_fabricante HAVING avg(precio)>200; 
19. SELECT fabricante.nombre, max(precio), min(precio), avg(precio), count(*) FROM producto INNER JOIN fabricante ON codigo_fabricante = fabricante.codigo  GROUP BY fabricante.nombre HAVING avg(precio)>200; 
20. SELECT count(*) FROM producto WHERE precio>=180;
21. SELECT fabricante.nombre, count(producto.nombre) FROM fabricante LEFT JOIN producto ON fabricante.codigo = codigo_fabricante WHERE precio>=180 GROUP BY fabricante.nombre; 
22. SELECT codigo_fabricante, avg(precio) FROM producto GROUP BY codigo_fabricante;
23. SELECT fabricante.nombre, avg(precio) FROM fabricante INNER JOIN producto ON fabricante.codigo = codigo_fabricante GROUP BY fabricante.nombre; 
24. SELECT fabricante.nombre FROM fabricante INNER JOIN producto ON codigo_fabricante = fabricante.codigo  GROUP BY fabricante.nombre HAVING avg(precio)>150; 
25. SELECT fabricante.nombre FROM fabricante INNER JOIN producto ON codigo_fabricante = fabricante.codigo  GROUP BY fabricante.nombre HAVING count(producto.nombre)>=2; 
26. SELECT fabricante.nombre, count(producto.nombre) FROM fabricante INNER JOIN producto ON codigo_fabricante = fabricante.codigo WHERE precio>=220 GROUP BY fabricante.nombre; 
27. SELECT fabricante.nombre, count(producto.nombre) FROM fabricante LEFT JOIN producto ON codigo_fabricante = fabricante.codigo WHERE precio>=220 GROUP BY fabricante.nombre; 
28. SELECT fabricante.nombre FROM fabricante INNER JOIN producto ON codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre HAVING sum(precio)>1000;
29. SELECT Pro1.nombre, precio, fabricante.nombre FROM producto as Pro1 INNER JOIN fabricante ON fabricante.codigo = codigo_fabricante where precio>= all(select precio from producto as Pro2 where Pro1.codigo_fabricante = Pro2.codigo_fabricante ) GROUP BY fabricante.nombre ORDER BY fabricante.nombre ASC ;

1.1.7 Subconsultas (En la cláusula WHERE)
1. SELECT nombre FROM producto WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre = "Lenovo");
2. SELECT * FROM producto WHERE precio = (SELECT MAX(precio) FROM producto WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre = "Lenovo"));
3. SELECT nombre FROM producto as Prod1 WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre = "Lenovo") && precio >= all(SELECT precio FROM producto as Prod2 WHERE Prod1.codigo_fabricante=Prod2.codigo_fabricante);
4. SELECT nombre FROM producto as Prod1 WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre LIKE "Hewlett%") && precio <= all(SELECT precio FROM producto as Prod2 WHERE Prod1.codigo_fabricante=Prod2.codigo_fabricante);
5. SELECT nombre, precio FROM producto WHERE precio >= (SELECT MAX(precio) FROM producto WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre = "Lenovo"));
6. SELECT nombre, precio FROM producto as Prod1 WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre = "Asus")  && precio > (SELECT AVG(precio) FROM producto as Prod2 WHERE Prod1.codigo_fabricante=Prod2.codigo_fabricante);

8. SELECT nombre FROM producto WHERE precio >= all (SELECT precio FROM producto);
9. SELECT nombre FROM producto WHERE precio <= all (SELECT precio FROM producto);
10. SELECT nombre FROM fabricante WHERE codigo = any (SELECT codigo_fabricante from producto);
11. SELECT nombre FROM fabricante WHERE codigo != all (SELECT codigo_fabricante from producto);
12. SELECT nombre FROM fabricante WHERE codigo IN (SELECT codigo_fabricante from producto);
13. SELECT nombre FROM fabricante WHERE codigo NOT IN (SELECT codigo_fabricante from producto);
14. SELECT nombre FROM fabricante WHERE EXISTS (SELECT codigo_fabricante FROM producto WHERE codigo_fabricante = fabricante.codigo);
15. SELECT nombre FROM fabricante WHERE NOT EXISTS (SELECT codigo_fabricante FROM producto WHERE codigo_fabricante = fabricante.codigo);
16. SELECT fabricante.nombre, Prod1.nombre, precio FROM producto as Prod1 RIGHT JOIN fabricante ON fabricante.codigo=codigo_fabricante where precio>= all(select precio from producto as Prod2 where Prod1.codigo_fabricante = Prod2.codigo_fabricante ) GROUP BY fabricante.nombre;
17. SELECT Prod1.nombre, precio FROM producto as Prod1 WHERE precio >= all (SELECT AVG(precio) from producto as Prod2 WHERE Prod1.codigo_fabricante=Prod2.codigo_fabricante);
18. SELECT nombre FROM producto as Prod1 WHERE codigo_fabricante = (SELECT codigo FROM fabricante WHERE nombre = "Lenovo") && precio >= all(SELECT precio FROM producto as Prod2 WHERE Prod1.codigo_fabricante=Prod2.codigo_fabricante);
